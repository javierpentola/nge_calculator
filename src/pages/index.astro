---
// Calculator page in Astro
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro Calculator</title>
	</head>
	<body>
		<main>
			<h1>Calculator</h1>
			<div class="calculator">
				<input type="text" id="display" readonly />
				<div class="buttons">
					<button class="clear">C</button>
					<button class="operator">÷</button>
					<button class="operator">×</button>
					<button class="backspace">⌫</button>
					
					<button class="number">7</button>
					<button class="number">8</button>
					<button class="number">9</button>
					<button class="operator">-</button>
					
					<button class="number">4</button>
					<button class="number">5</button>
					<button class="number">6</button>
					<button class="operator">+</button>
					
					<button class="number">1</button>
					<button class="number">2</button>
					<button class="number">3</button>
					<button class="equals">=</button>
					
					<button class="number zero">0</button>
					<button class="decimal">.</button>
				</div>
			</div>
		</main>
	</body>
</html>

<style>
	body {
		font-family: 'Courier New', monospace;
		display: flex;
		justify-content: center;
		align-items: center;
		height: 100vh;
		margin: 0;
		background-color: #1a1a1a;
		background-image: linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8)), 
			repeating-linear-gradient(45deg, #222 0, #222 2px, #1a1a1a 2px, #1a1a1a 4px);
		color: #f0f0f0;
	}
	
	main {
		text-align: center;
		position: relative;
	}
	
	h1 {
		color: #ff6000;
		margin-bottom: 20px;
		font-weight: bold;
		letter-spacing: 2px;
		text-transform: uppercase;
		text-shadow: 0 0 5px rgba(255, 96, 0, 0.7);
		position: relative;
	}
	
	h1::before {
		content: "NERV";
		position: absolute;
		top: -20px;
		right: 0;
		font-size: 14px;
		opacity: 0.7;
	}
	
	.calculator {
		background-color: #222;
		border-radius: 0;
		padding: 25px;
		box-shadow: 0 0 20px rgba(255, 96, 0, 0.3);
		width: 320px;
		border: 1px solid #ff6000;
		position: relative;
	}
	
	.calculator::before {
		content: "";
		position: absolute;
		top: 5px;
		left: 5px;
		right: 5px;
		bottom: 5px;
		border: 1px dashed rgba(255, 96, 0, 0.3);
		pointer-events: none;
	}
	
	#display {
		width: 100%;
		height: 60px;
		margin-bottom: 15px;
		font-size: 24px;
		text-align: right;
		padding: 10px;
		box-sizing: border-box;
		border: none;
		border-radius: 0;
		background-color: #000;
		color: #ff6000;
		font-family: 'Courier New', monospace;
		box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.8);
		border-left: 3px solid #ff6000;
	}
	
	.buttons {
		display: grid;
		grid-template-columns: repeat(4, 1fr);
		grid-gap: 8px;
	}
	
	button {
		padding: 15px;
		font-size: 18px;
		border: 1px solid #444;
		border-radius: 0;
		cursor: pointer;
		background-color: #333;
		color: white;
		transition: all 0.2s;
		font-family: 'Courier New', monospace;
		position: relative;
		overflow: hidden;
	}
	
	button::after {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 2px;
		background: linear-gradient(90deg, transparent, rgba(255, 96, 0, 0.5), transparent);
	}
	
	button:hover {
		background-color: #444;
		box-shadow: 0 0 10px rgba(255, 96, 0, 0.4);
	}
	
	.number {
		background-color: #2a2a2a;
	}
	
	.operator {
		background-color: #ff6000;
		color: #000;
	}
	
	.equals {
		background-color: #ff6000;
		grid-row: span 2;
		color: #000;
		position: relative;
	}
	
	.equals::before {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(0, 0, 0, 0.1) 5px, rgba(0, 0, 0, 0.1) 10px);
	}
	
	.clear, .backspace {
		background-color: #aa0000;
		color: white;
	}
	
	.zero {
		grid-column: span 2;
	}
	
	/* Evangelion-specific decorative elements */
	.calculator::after {
		content: "MAGI SYSTEM";
		position: absolute;
		bottom: -20px;
		right: 10px;
		font-size: 10px;
		color: #ff6000;
		opacity: 0.7;
	}
	
	main::before {
		content: "";
		position: absolute;
		top: -30px;
		left: -30px;
		width: 60px;
		height: 60px;
		border: 1px solid #ff6000;
		border-radius: 50%;
		opacity: 0.3;
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const display = document.getElementById('display');
		const buttons = document.querySelectorAll('button');
		
		let currentInput = '';
		let currentOperation = null;
		let previousInput = '';
		
		buttons.forEach(button => {
			button.addEventListener('click', () => {
				const value = button.textContent;
				
				// Number button
				if (button.classList.contains('number')) {
					currentInput += value;
					display.value = currentInput;
				}
				
				// Decimal button
				if (button.classList.contains('decimal') && !currentInput.includes('.')) {
					currentInput += value;
					display.value = currentInput;
				}
				
				// Operator button
				if (button.classList.contains('operator')) {
					if (currentInput !== '') {
						if (previousInput !== '') {
							calculate();
						}
						previousInput = currentInput;
						currentInput = '';
						currentOperation = value;
					}
				}
				
				// Equals button
				if (button.classList.contains('equals')) {
					calculate();
				}
				
				// Clear button
				if (button.classList.contains('clear')) {
					clear();
				}
				
				// Backspace button
				if (button.classList.contains('backspace')) {
					currentInput = currentInput.slice(0, -1);
					display.value = currentInput;
				}
			});
		});
		
		function calculate() {
			if (currentInput === '' || previousInput === '') return;
			
			let result;
			const prev = parseFloat(previousInput);
			const current = parseFloat(currentInput);
			
			switch (currentOperation) {
				case '+':
					result = prev + current;
					break;
				case '-':
					result = prev - current;
					break;
				case '×':
					result = prev * current;
					break;
				case '÷':
					result = prev / current;
					break;
				default:
					return;
			}
			
			currentInput = result.toString();
			currentOperation = null;
			previousInput = '';
			display.value = currentInput;
		}
		
		function clear() {
			currentInput = '';
			previousInput = '';
			currentOperation = null;
			display.value = '';
		}
	});
</script>